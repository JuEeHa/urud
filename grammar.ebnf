@@grammar :: Urud

@@eol_comments :: /#.*?$/

@@keyword :: let fun

start = {definition}* $;

@name
identifier = /(?!\d)\w+/;

unbound_type = '*' identifier;
type = type '<' type {',' type}* '>' | (identifier | unbound_type) '[' identifier {',' identifier} ']' | unbound_type | identifier;

literal = integer_literal | string_literal;
integer_literal = /[-+]?[\d]+/;
string_literal = "'" /([^'\\]|\\.)*/ "'";

function_call = atom '(' [expression {',' expression}*] ')';

addsub_operator = muldiv_operator {('+' | '-') muldiv_operator};
muldiv_operator = atom {('*' | '/') atom};

atom = function_call | literal | identifier | '(' expression ')';

expression = addsub_operator | atom;

variable_definition = 'let' identifier '=' expression;

function_definition = 'fun' identifier '(' [type identifier {',' type identifier}*] ')' {expression | definition}* ';';
function_prototype = type identifier '(' [type {',' type}*] ')';

interface_definition = 'interface' identifier unbound_type {function_prototype}* ';';

definition = variable_definition | function_definition | interface_definition;
